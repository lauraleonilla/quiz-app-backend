{"version":3,"sources":["assets/cat.jpeg","constants.js","initialState.js","reducers/appStateReducer.js","store.js","components/Home.js","api/quizService.js","components/quizComponents/QuizContainer.js","components/ErrorMessage.js","api/loginService.js","components/Login.js","components/Header.js","api/chatService.js","components/Chat.js","components/profileComponents/ProfilePage.js","components/quizComponents/Boolean.js","components/quizComponents/MultipleChoice.js","components/quizComponents/QuizPage.js","components/NotFoundPage.js","api/userService.js","components/Register.js","components/onwQuiz/Header.js","components/onwQuiz/AnswerField.js","components/onwQuiz/MultiQuizInput.js","components/onwQuiz/BooleanQuizInput.js","api/userQuizService.js","components/onwQuiz/QuizForm.js","components/onwQuiz/index.js","routes.js","loginroutes.js","App.js","index.js"],"names":["module","exports","GOT_USER","GOT_TOKEN","QUIZ_DATA","SELECT_QUIZ","BOOLEAN","MULTIPLE","CURRENT_SCORE","RESET_SCORE","ANIMAL_QUIZ","FILM_QUIZ","BOOK_QUIZ","COMPUTER_QUIZ","GENERAL_QUIZ","BOOLEAN_QUIZ_DATA","MULTI_QUIZ_DATA","appState","user","token","quizData","selectedQuiz","booleanQuizData","multiQuizData","appStateReducer","state","initialState","action","newState","type","CONSTANTS","Object","assign","payload","FILM_QUIZ_DATA","filmQuizData","length","indexExists","findIndex","e","questionIndex","reducer","combineReducers","store","createStore","applyMiddleware","thunk","withRouter","props","Button","basic","color","content","onClick","history","push","getQuizdata","quizType","a","baseUrl","axios","get","data","results","getUserQuizTopics","response","saveScore","getState","config","headers","Authorization","post","window","localStorage","getItem","JSON","parse","message","updateScore","scores","find","score","id","newScore","index","indexOf","splice","setItem","stringify","connect","dispatch","selectQuiz","useState","userTopics","setUserQuizTopics","selectQuizHandler","quiz","useEffect","quizService","userQuizTopics","fetchData","className","map","key","to","multipleChoie","quizTitle","renderUserMultipleChoice","boolean","renderUserBoolean","ErrorMessage","login","fblogin","gotUser","gotToken","userName","setuserName","passWord","setpassWord","errorMessage","setErrorMessge","loginHandler","event","preventDefault","loginService","error","responseFacebook","name","fbId","userID","loggedInuser","userToSave","image","picture","url","onSubmit","Input","icon","Icon","link","placeholder","value","onChange","target","appId","autoLoad","fields","callback","style","padding","Menu","Item","removeItem","location","reload","getChatmessages","sendChatMessage","Chat","chatMessages","setChatMessages","newMessage","setNewMessage","chatService","timeOut","setInterval","clearTimeout","handleresetMessage","messageHandler","time","moment","unix","format","username","src","alt","Cat","getScores","Boolean","nextQuestionHandler","MultipleChoice","currentQuestion","shuffle","array","j","x","i","Math","floor","random","_id","answerOptions","incorrect_answers","forEach","answer","correct_answer","atob","renderAnswers","gotQuizData","setcurrentQuestion","setScore","setMessage","match","params","path","split","scoreHandler","isOwnQuiz","userId","category","concatScores","concat","questions","correctAnswer","question","NotFoundPage","role","aria-label","createUser","Register","setName","userService","success","Header","handleRadioButnChange","Form","Field","fontSize","marginBottom","Radio","label","checked","AnswerField","newAnswerHandler","correct","answerText","setAnswer","saveQuizData","numberOfAnswers","errorHandler","setQuestion","setCorrectAnswer","setAnswers","questionSaved","setquestionSaved","res","rows","row","renderAnswerInput","textContent","createBooleanQuiz","createMultiChoiceQuiz","numberOfQuestions","setNumberOfQuestions","setNumberOfAnswers","setQuizType","setError","setQuizTitle","quizSaved","setquizSaved","setTimeout","saveQuizHandler","handleQuestionDropDownChange","handleAnswerDropDownChange","options","text","Dropdown","fluid","selection","renderDropDown","renderQuestionField","textAlign","OwnQuiz","Routes","exact","render","component","LoginRoutes","loggedUserJSON","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.fe754c87.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/cat.1e89a684.jpeg\";","export default {\n  GOT_USER: 'GOT_USER',\n  GOT_TOKEN: 'GOT_TOKEN',\n  QUIZ_DATA: 'QUIZ_DATA',\n  SELECT_QUIZ: 'SELECT_QUIZ',\n  BOOLEAN: 'boolean',\n  MULTIPLE: 'multiple',\n  CURRENT_SCORE: 'CURRENT_SCORE',\n  RESET_SCORE: 'RESET_SCORE',\n  ANIMAL_QUIZ: 'Animals',\n  FILM_QUIZ: 'Film',\n  BOOK_QUIZ: 'Books',\n  COMPUTER_QUIZ: 'Computers',\n  GENERAL_QUIZ: 'General',\n  BOOLEAN_QUIZ_DATA: 'BOOLEAN_QUIZ_DATA',\n  MULTI_QUIZ_DATA: 'MULTIQUIZ_DATA'\n}\n","export default {\n  appState: {\n    user: null,\n    token: null,\n    quizData: [],\n    selectedQuiz: null,\n    booleanQuizData: [],\n    multiQuizData: []\n  }\n}\n","import CONSTANTS from '../constants'\nimport initialState from '../initialState'\n\nconst appStateReducer = (state = initialState.appState, action) => {\n  let newState = null\n  switch (action.type) {\n  case CONSTANTS.QUIZ_DATA: {\n    newState = Object.assign({}, state, {\n      quizData: action.payload\n    })\n    return newState\n  }\n  case CONSTANTS.FILM_QUIZ_DATA: {\n    newState = Object.assign({}, state, {\n      filmQuizData: action.payload\n    })\n    return newState\n  }\n  case CONSTANTS.GOT_USER: {\n    newState = Object.assign({}, state, {\n      user: action.payload\n    })\n    return newState\n  }\n  case CONSTANTS.SELECT_QUIZ: {\n    newState = Object.assign({}, state, {\n      selectedQuiz: action.payload\n    })\n    return newState\n  }\n  case CONSTANTS.GOT_TOKEN: {\n    newState = Object.assign({}, state, {\n      token: action.payload\n    })\n    return newState\n  }\n  case CONSTANTS.BOOLEAN_QUIZ_DATA: {\n    if (state.booleanQuizData.length) {\n      const indexExists = state.booleanQuizData.findIndex(\n        e => e.questionIndex === action.payload.questionIndex\n      )\n      if (indexExists >= 0) {\n        state.booleanQuizData[indexExists] = action.payload\n        newState = Object.assign({}, state, {\n          booleanQuizData: [...state.booleanQuizData]\n        })\n      } else {\n        newState = Object.assign({}, state, {\n          booleanQuizData: [...state.booleanQuizData, action.payload]\n        })\n      }\n    } else {\n      newState = Object.assign({}, state, {\n        booleanQuizData: [...state.booleanQuizData, action.payload]\n      })\n    }\n    return newState\n  }\n  case CONSTANTS.MULTI_QUIZ_DATA: {\n    if (state.multiQuizData.length) {\n      const indexExists = state.multiQuizData.findIndex(\n        e => e.questionIndex === action.payload.questionIndex\n      )\n      if (indexExists >= 0) {\n        state.multiQuizData[indexExists] = action.payload\n        newState = Object.assign({}, state, {\n          multiQuizData: [...state.multiQuizData]\n        })\n      } else {\n        newState = Object.assign({}, state, {\n          multiQuizData: [...state.multiQuizData, action.payload]\n        })\n      }\n    } else {\n      newState = Object.assign({}, state, {\n        multiQuizData: [...state.multiQuizData, action.payload]\n      })\n    }\n    return newState\n  }\n  default:\n    return state\n  }\n}\n\nexport default appStateReducer\n","import { createStore, combineReducers, applyMiddleware } from 'redux'\nimport thunk from 'redux-thunk'\nimport appStateReducer from './reducers/appStateReducer'\n\nconst reducer = combineReducers({\n  appState: appStateReducer,\n})\n\nconst store = createStore(reducer, applyMiddleware(thunk))\n\nexport default store","import React from 'react'\nimport { Button } from 'semantic-ui-react'\nimport { withRouter } from 'react-router'\n\nconst Home = props => {\n\n  const clickHandler = () => {\n    const path = 'quiz'\n    props.history.push(path)\n  }\n  return (\n    <div>\n      <h1>Welcome to play quizzes!</h1>\n      <Button basic color='purple' content='Click to start!' onClick={() => clickHandler()}/>\n    </div>\n  )\n}\n\nexport default withRouter(Home)\n","import axios from 'axios'\nimport store from '../store'\nimport CONSTANTS from '../constants'\n\nconst getQuizdata = async (quizType, selectedQuiz) => {\n  let baseUrl = null\n  if (selectedQuiz === CONSTANTS.ANIMAL_QUIZ) {\n    baseUrl =\n      'https://opentdb.com/api.php?amount=10&category=27&type=boolean&encode=base64'\n  }\n  if (selectedQuiz === CONSTANTS.FILM_QUIZ) {\n    baseUrl =\n      'https://opentdb.com/api.php?amount=10&category=11&type=boolean&encode=base64'\n  }\n  if (selectedQuiz === CONSTANTS.BOOK_QUIZ) {\n    baseUrl =\n      'https://opentdb.com/api.php?amount=10&category=10&difficulty=easy&type=multiple&encode=base64'\n  }\n  if (selectedQuiz === CONSTANTS.COMPUTER_QUIZ) {\n    baseUrl =\n      'https://opentdb.com/api.php?amount=10&category=18&type=boolean&encode=base64'\n  }\n  if (selectedQuiz === CONSTANTS.GENERAL_QUIZ) {\n    baseUrl =\n      'https://opentdb.com/api.php?amount=10&category=9&type=multiple&encode=base64'\n  }\n  if (quizType && quizType === CONSTANTS.BOOLEAN) {\n    baseUrl = `/api/quiz/userQuiz/boolean/${selectedQuiz}`\n  }\n  if (quizType && quizType === CONSTANTS.MULTIPLE) {\n    baseUrl = `/api/quiz/userQuiz/multiple/${selectedQuiz}`\n  }\n  const data = await axios.get(baseUrl)\n  return data.data.results || data.data\n}\n\nconst getUserQuizTopics = async () => {\n  const url = '/api/quiz'\n  const response = await axios.get(url)\n  return response.data\n}\n\nconst saveScore = async payload => {\n  const scoreUrl = '/api/quiz/score'\n  const state = store.getState()\n  const config = {\n    headers: { Authorization: `bearer ${state.appState.token}` }\n  }\n  const response = await axios.post(scoreUrl, payload, config)\n  let user = window.localStorage.getItem('loggedInUser')\n  user = JSON.parse(user)\n  if (response.data.message) {\n    const updateScore = user.scores.find(score => {\n      return score.id === response.data.newScore.id\n    })\n    const index = user.scores.indexOf(updateScore)\n    user.scores.splice(index, 1)\n    user.scores.push(response.data.newScore)\n    window.localStorage.setItem('loggedInUser', JSON.stringify(user))\n  } else {\n    user.scores.push(response.data)\n    window.localStorage.setItem('loggedInUser', JSON.stringify(user))\n  }\n  return response.data\n}\n\nexport default { getQuizdata, saveScore, getUserQuizTopics }\n","import React, { useState, useEffect } from 'react'\nimport CONSTANTS from '../../constants'\nimport quizService from '../../api/quizService'\nimport { withRouter, Link } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport './QuizPage.scss'\n\nconst QuizContainer = props => {\n  const [userTopics, setUserQuizTopics] = useState([])\n\n  const selectQuizHandler = quiz => {\n    props.selectQuiz(quiz)\n  }\n\n  useEffect(() => {\n    const fetchData = async () => {\n      const userQuizTopics = await quizService.getUserQuizTopics()\n      setUserQuizTopics(userQuizTopics)\n    }\n    fetchData()\n  }, [])\n\n  const renderBooleanOptions = () => {\n    const quizOptions = [\n      CONSTANTS.ANIMAL_QUIZ,\n      CONSTANTS.FILM_QUIZ,\n      CONSTANTS.COMPUTER_QUIZ\n    ]\n    return quizOptions.map(quiz => (\n      <Link key={quiz} to={`/quiz/${quiz}`}>\n        <p onClick={() => selectQuizHandler(quiz)}>{quiz}</p>\n      </Link>\n    ))\n  }\n\n  const renderMultipleOptions = () => {\n    const quizOptions = [CONSTANTS.BOOK_QUIZ, CONSTANTS.GENERAL_QUIZ]\n    return quizOptions.map(quiz => (\n      <Link key={quiz} to={`/quiz/${quiz}`}>\n        <p onClick={() => selectQuizHandler(quiz)}>{quiz}</p>\n      </Link>\n    ))\n  }\n\n  const renderUserMultipleChoice = () => {\n    if (userTopics.multipleChoie && userTopics.multipleChoie.length) {\n      return userTopics.multipleChoie.map(quiz => (\n        <Link key={quiz.id} to={`/quiz/multipleChoice/${quiz.id}`}>\n          <p onClick={() => selectQuizHandler(quiz.id)}>{quiz.quizTitle}</p>\n        </Link>\n      ))\n    }\n  }\n\n  const renderUserBoolean = () => {\n    if (userTopics.boolean && userTopics.boolean.length) {\n      return userTopics.boolean.map(quiz => (\n        <Link key={quiz.id} to={`/quiz/boolean/${quiz.id}`}>\n          <p onClick={() => selectQuizHandler(quiz.id)}>{quiz.quizTitle}</p>\n        </Link>\n      ))\n    }\n  }\n\n  return (\n    <div className='quizWrapper'>\n      <h1>Select a quiz</h1>\n      <div className='quizTypeContainer'>\n        <div>\n          <h3>True / False Quizzes</h3>\n          {renderBooleanOptions()}\n        </div>\n        <div>\n          <h3>Multiple choice quizzes</h3>\n          {renderMultipleOptions()}\n        </div>\n      </div>\n      <h2>User generated quizzes</h2>\n      <div className='userQuizContainer'>\n        <div>\n          <h3>Multiple choice quizzes</h3>\n          {renderUserMultipleChoice()}\n        </div>\n        <div>\n          <h3>True / False Quizzes</h3>\n          {renderUserBoolean()}\n        </div>\n      </div>\n    </div>\n  )\n}\n\nconst mapDispatchToProps = dispatch => ({\n  selectQuiz: data => {\n    dispatch({\n      type: CONSTANTS.SELECT_QUIZ,\n      payload: data\n    })\n  }\n})\n\nexport default withRouter(connect(null, mapDispatchToProps)(QuizContainer))\n","import React from 'react'\nimport './ErrorMessage.scss'\n\nconst ErrorMessage = props => {\n  return (\n    <div>\n      <h3 className='errorMessage'>{props.message}</h3>\n    </div>\n  )\n}\n\nexport default ErrorMessage\n","import axios from 'axios'\nconst baseUrl = '/api/login'\n\nconst login = async payload => {\n  const response = await axios.post(baseUrl, payload)\n  window.localStorage.setItem('loggedInUser', JSON.stringify(response.data))\n  return response.data\n}\n\nconst fblogin = async payload => {\n  const response = await axios.post(baseUrl, payload)\n  window.localStorage.setItem('loggedInUser', JSON.stringify(response.data))\n  return response.data\n}\n\nexport default { login, fblogin }\n","import React, { useState } from 'react'\nimport { Button } from 'semantic-ui-react'\nimport { Input } from 'semantic-ui-react'\nimport { Icon } from 'semantic-ui-react'\nimport { Link } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport Home from './Home'\nimport ErrorMessage from './ErrorMessage'\nimport CONSTANTS from '../constants'\nimport loginService from '../api/loginService'\nimport FacebookLogin from 'react-facebook-login'\nimport './Login.scss'\n\nconst Login = props => {\n  const [userName, setuserName] = useState('')\n  const [passWord, setpassWord] = useState('')\n  const [errorMessage, setErrorMessge] = useState('')\n\n  const loginHandler = async event => {\n    event.preventDefault()\n    const payload = {\n      userName,\n      passWord\n    }\n    try {\n      const user = await loginService.login(payload)\n      if (user) {\n        props.gotUser(user)\n        props.gotToken(user.token)\n      }\n    } catch (error) {\n      setErrorMessge(error.response.data.error)\n    }\n  }\n  const usernameHandler = event => {\n    setuserName(event.target.value)\n  }\n  const passwordHandler = event => {\n    setpassWord(event.target.value)\n  }\n  const handleDeleteUserName = () => {\n    setuserName('')\n  }\n  const handleDeletePassword = () => {\n    setpassWord('')\n  }\n\n  const responseFacebook = async response => {\n    const user = {\n      name: response.name,\n      fbId: response.userID\n    }\n    if (user) {\n      try {\n        const loggedInuser = await loginService.fblogin(user)\n        const userToSave = {\n          ...loggedInuser,\n          image: response.picture.data.url\n        }\n        props.gotUser(userToSave)\n        props.gotToken(userToSave.token)\n        window.localStorage.setItem('loggedInUser', JSON.stringify(userToSave))\n      } catch (error) {\n        setErrorMessge(error.response.data.error)\n      }\n    }\n  }\n\n  return (\n    <div className='loginContainer'>\n      {props.user ? (\n        <Home />\n      ) : (\n        <div className='loginElements'>\n          <h1>Login</h1>\n          <ErrorMessage message={errorMessage} />\n          <form onSubmit={loginHandler} className='inputForm'>\n            <Input\n              className='inputField'\n              icon={<Icon name='delete' link onClick={handleDeleteUserName} />}\n              placeholder='Username...'\n              value={userName}\n              onChange={usernameHandler}\n            />\n            <Input\n              className='inputField'\n              type='password'\n              icon={<Icon name='delete' link onClick={handleDeletePassword} />}\n              placeholder='Password...'\n              value={passWord}\n              onChange={passwordHandler}\n            />\n            <Button\n              className='loginBtn'\n              content='Login'\n              type='submit'\n              basic\n              color='purple'\n            />\n          </form>\n          <div className='facebookButton'>\n            <FacebookLogin\n              appId='2238566619796019'\n              autoLoad={false}\n              fields='name,email,picture.type(large)'\n              callback={responseFacebook}\n            />\n          </div>\n        </div>\n      )}\n      <Link to='/register'>Or create an account here</Link>\n    </div>\n  )\n}\n\nconst mapStateToProps = state => ({\n  user: state.appState.user\n})\n\nconst mapDispatchToProps = dispatch => ({\n  gotUser: user => {\n    dispatch({\n      type: CONSTANTS.GOT_USER,\n      payload: user\n    })\n  },\n  gotToken: token => {\n    dispatch({\n      type: CONSTANTS.GOT_TOKEN,\n      payload: token\n    })\n  }\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Login)\n","import React from 'react'\nimport { Menu } from 'semantic-ui-react'\nimport { withRouter, Link } from 'react-router-dom'\nimport './Header.scss'\n\nconst Header = props => {\n  const logout = () => {\n    window.localStorage.removeItem('loggedInUser')\n    props.history.push('/')\n    window.location.reload()\n  }\n\n  return (\n    <div style={{ padding: 20 }}>\n      <Menu>\n        <Menu.Item>\n          <Link to='/'>Start page</Link>\n        </Menu.Item>\n        <Menu.Item>\n          <Link to='/chat'>Chat</Link>\n        </Menu.Item>\n        <Menu.Item>\n          <Link to='/ownQuizzes'>Create own quiz</Link>\n        </Menu.Item>\n        <Menu.Item className='profileBtn'>\n          <Link to='/profile'>My profile</Link>\n        </Menu.Item>\n        <Menu.Item onClick={() => logout()}>Logout</Menu.Item>\n      </Menu>\n    </div>\n  )\n}\n\nexport default withRouter(Header)\n","import axios from 'axios'\nimport store from '../store'\nconst baseUrl = '/api/chat'\n\nconst getChatmessages = async () => {\n  const { data } = await axios.get(baseUrl)\n  return data\n}\n\nconst sendChatMessage = async payload => {\n  const state = store.getState()\n  const config = {\n    headers: { Authorization: `bearer ${state.appState.token}` }\n  }\n  if(payload && payload.message) {\n    const response = await axios.post(baseUrl, payload, config)\n    return response\n  }\n}\n\nexport default { getChatmessages, sendChatMessage }\n","import React, { useEffect, useState } from 'react'\nimport moment from 'moment'\nimport chatService from '../api/chatService'\nimport { Button } from 'semantic-ui-react'\nimport { Input } from 'semantic-ui-react'\nimport { Icon } from 'semantic-ui-react'\nimport './chat.scss'\n\nconst Chat = () => {\n  const [chatMessages, setChatMessages] = useState([])\n  const [newMessage, setNewMessage] = useState('')\n\n  useEffect(() => {\n    const fetchData = async () => {\n      const data = await chatService.getChatmessages()\n      setChatMessages(data)\n    }\n    fetchData()\n    const timeOut = setInterval(() => {\n      fetchData()\n    }, 15000)\n    return () => {\n      clearTimeout(timeOut)\n    }\n  }, [])\n\n  const renderMessages = () => {\n    return chatMessages.map((message, index) => {\n      return (\n        <span key={index} className='chatMessage'>\n          <p className='timeStamp'>\n            {moment.unix(message.time).format('YYYY/MM/DD HH:mm')}\n          </p>\n          {message.user.username ? (\n            <p className='userName'>{message.user.username}: </p>\n          ) : (\n            <p className='userName'>{message.user.name}: </p>\n          )}\n          <p className='messagetext'>{message.message}</p>\n        </span>\n      )\n    })\n  }\n\n  const newMessageHandler = event => {\n    setNewMessage(event.target.value)\n  }\n\n  const handleresetMessage = () => {\n    setNewMessage('')\n  }\n\n  const messageHandler = async event => {\n    event.preventDefault()\n    const payload = {\n      message: newMessage,\n      time: moment().unix()\n    }\n    await chatService.sendChatMessage(payload)\n    handleresetMessage()\n  }\n\n  return (\n    <div>\n      <div className='chatWrapper'>\n        <h1>Chat with other players here</h1>\n        <div className='messageContainer'>{renderMessages()}</div>\n        <form onSubmit={messageHandler} className='chatForm'>\n          <Input\n            className='inputField'\n            icon={<Icon name='delete' link onClick={handleresetMessage} />}\n            placeholder='Write a message!'\n            value={newMessage}\n            onChange={newMessageHandler}\n          />\n          <Button\n            className='loginBtn'\n            content='Send'\n            type='submit'\n            basic\n            color='purple'\n          />\n        </form>\n      </div>\n    </div>\n  )\n}\n\nexport default Chat\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport Cat from '../../assets/cat.jpeg'\nimport './ProfilePage.scss'\n\nconst ProfilePage = ({ user }) => {\n  if (!user) {\n    return null\n  }\n\n  const getScores = () => {\n    if (user.scores && user.scores.length) {\n      return user.scores.map(score => {\n        return (\n          <div className='scoreColumn' key={score.id}>\n            <h3>{`${score.quiz}:  ${score.score}`}</h3>\n          </div>\n        )\n      })\n    }\n  }\n\n  return (\n    <div className='pageWrapper'>\n      <div className='profileContainer'>\n        {user.username ? <p className='title'>{user.username}</p> : null}\n        {user.name ? <p className='title'>{user.name}</p> : null}\n        {user.image ? (\n          <img src={user.image} alt={user.image} />\n        ) : (\n          <img className='image' src={Cat} alt='You!' />\n        )}\n      </div>\n      <div className='scoreWrapper'>\n        <h2>Scoreboard</h2>\n        {getScores()}\n      </div>\n    </div>\n  )\n}\n\nconst mapStateToProps = state => ({\n  user: state.appState.user\n})\n\nexport default connect(mapStateToProps)(ProfilePage)\n","import React from 'react'\nimport { Button } from 'semantic-ui-react'\n\nconst Boolean = ({ nextQuestionHandler }) => {\n  return (\n    <div>\n      <Button\n        basic\n        color='purple'\n        content='True'\n        onClick={() => nextQuestionHandler('True')}\n      />\n      <Button\n        basic\n        color='purple'\n        content='False'\n        onClick={() => nextQuestionHandler('False')}\n      />\n    </div>\n  )\n}\n\nexport default Boolean\n","import React from 'react'\nimport { Button } from 'semantic-ui-react'\n\nconst MultipleChoice = ({ currentQuestion, nextQuestionHandler }) => {\n  const shuffle = array => {\n    let j, x, i\n    for (i = array.length - 1; i > 0; i--) {\n      j = Math.floor(Math.random() * (i + 1))\n      x = array[i]\n      array[i] = array[j]\n      array[j] = x\n    }\n    return array\n  }\n  const renderAnswers = () => {\n    let shuffled = null\n    if (currentQuestion._id) {\n      const answerOptions = []\n      currentQuestion.incorrect_answers.forEach(e => {\n        answerOptions.push(e.answer)\n      })\n      answerOptions.push(currentQuestion.correct_answer)\n      shuffled = shuffle(answerOptions)\n      return shuffled.map((answer, index) => (\n        <Button\n          key={index}\n          basic\n          color='purple'\n          content={answer}\n          onClick={() => nextQuestionHandler(answer)}\n        />\n      ))\n    } else {\n      currentQuestion.incorrect_answers.push(currentQuestion.correct_answer)\n      shuffled = shuffle(currentQuestion.incorrect_answers)\n      return shuffled.map((answer, index) => (\n        <Button\n          key={index}\n          basic\n          color='purple'\n          content={atob(answer)}\n          onClick={() => nextQuestionHandler(atob(answer))}\n        />\n      ))\n    }\n  }\n\n  return <div>{renderAnswers()}</div>\n}\n\nexport default MultipleChoice\n","import React, { useState, useEffect } from 'react'\nimport CONSTANTS from '../../constants'\nimport { withRouter, Link } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport quizService from '../../api/quizService'\nimport Boolean from './Boolean'\nimport MultipleChoice from './MultipleChoice'\nimport './QuizPage.scss'\n\nconst QuizPage = props => {\n  const [currentQuestion, setcurrentQuestion] = useState(0)\n  const [score, setScore] = useState(0)\n  const [message, setMessage] = useState(null)\n\n  const { gotQuizData, match } = props\n\n  useEffect(() => {\n    const fetchData = async () => {\n      const selectedQuiz = match.params.selectedQuiz\n      const type = match.path.split('/quiz/')[1]\n      let quizData = null\n      if (type && type === 'multipleChoice/:selectedQuiz') {\n        quizData = await quizService.getQuizdata(\n          CONSTANTS.MULTIPLE,\n          selectedQuiz\n        )\n      }\n      if (type && type === 'boolean/:selectedQuiz') {\n        quizData = await quizService.getQuizdata(\n          CONSTANTS.BOOLEAN,\n          selectedQuiz\n        )\n      }\n      if (type && type === ':selectedQuiz') {\n        quizData = await quizService.getQuizdata(null, selectedQuiz)\n      }\n      gotQuizData(quizData)\n    }\n    fetchData()\n  }, [gotQuizData, match])\n\n  const scoreHandler = async isOwnQuiz => {\n    let payload = {}\n    if (!isOwnQuiz) {\n      payload = {\n        quiz: atob(props.quizData[0].category),\n        userId: props.user.id,\n        score\n      }\n    } else {\n      payload = {\n        quiz: props.quizData.quizTitle,\n        userId: props.user.id,\n        score\n      }\n    }\n    const response = await quizService.saveScore(payload)\n    if (!response.message) {\n      const concatScores = props.user.scores.concat(response)\n      props.gotUser({ ...props.user, scores: concatScores })\n      setMessage(`You scored ${response.score}!`)\n    } else {\n      setMessage(`Your new score is ${response.newScore.score}!`)\n      const updateScore = props.user.scores.find(score => {\n        return score.id === response.newScore.id\n      })\n      const index = props.user.scores.indexOf(updateScore)\n      props.user.scores.splice(index, 1)\n      props.user.scores.push(response.newScore)\n      props.gotUser({ ...props.user })\n    }\n  }\n\n  const nextQuestionHandler = answer => {\n    let correctAnswer = null\n    if (!props.quizData.questions) {\n      correctAnswer = atob(props.quizData[currentQuestion].correct_answer)\n    } else {\n      correctAnswer =\n        props.quizData.questions[currentQuestion].correctAnswer ||\n        props.quizData.questions[currentQuestion].correct_answer\n    }\n    if (answer === correctAnswer) {\n      setScore(score + 1)\n    }\n    if (\n      props.quizData.questions &&\n      currentQuestion === props.quizData.questions.length - 1\n    ) {\n      const isOwnQuiz = true\n      scoreHandler(isOwnQuiz)\n      setcurrentQuestion(null)\n    }\n    if (\n      !props.quizData.questions &&\n      currentQuestion === props.quizData.length - 1\n    ) {\n      scoreHandler()\n      setcurrentQuestion(null)\n    } else {\n      return setcurrentQuestion(currentQuestion + 1)\n    }\n  }\n\n  const renderQuestion = () => {\n    return (\n      <div className='questionContainer'>\n        <h3>\n          {props.quizData.questions\n            ? props.quizData.questions[currentQuestion].question\n            : atob(props.quizData[currentQuestion].question)}\n        </h3>\n      </div>\n    )\n  }\n\n  const renderOptions = () => {\n    if (\n      (!props.quizData.questions &&\n        atob(props.quizData[currentQuestion].type) === CONSTANTS.BOOLEAN) ||\n      (props.quizData.questions &&\n        props.quizData.questions[currentQuestion].type === CONSTANTS.BOOLEAN)\n    ) {\n      return <Boolean nextQuestionHandler={nextQuestionHandler} />\n    }\n    if (\n      (!props.quizData.questions &&\n        atob(props.quizData[currentQuestion].type) === CONSTANTS.MULTIPLE) ||\n      (props.quizData.questions &&\n        props.quizData.questions[currentQuestion].type === CONSTANTS.MULTIPLE)\n    ) {\n      return (\n        <MultipleChoice\n          nextQuestionHandler={nextQuestionHandler}\n          currentQuestion={\n            !props.quizData.questions\n              ? props.quizData[currentQuestion]\n              : props.quizData.questions[currentQuestion]\n          }\n        />\n      )\n    }\n  }\n\n  return (\n    <div>\n      <h2>{message}</h2>\n      {(props.quizData && props.quizData[currentQuestion]) ||\n      (props.quizData.questions &&\n        props.quizData.questions[currentQuestion]) ? (\n        <div>\n          {renderQuestion()}\n          {renderOptions()}\n        </div>\n      ) : (\n        <Link to='/quiz'>Back to quizzes</Link>\n      )}\n      <h3>Score: {score}</h3>\n    </div>\n  )\n}\n\nconst mapStateToProps = state => ({\n  quizData: state.appState.quizData,\n  user: state.appState.user\n})\n\nconst mapDispatchToProps = dispatch => ({\n  gotQuizData: data => {\n    dispatch({\n      type: CONSTANTS.QUIZ_DATA,\n      payload: data\n    })\n  },\n  gotUser: user => {\n    dispatch({\n      type: CONSTANTS.GOT_USER,\n      payload: user\n    })\n  }\n})\n\nexport default withRouter(\n  connect(mapStateToProps, mapDispatchToProps)(QuizPage)\n)\n","import React from 'react'\nimport { Link } from 'react-router-dom'\nimport './NotFoundPage.scss'\n\nconst NotFoundPage = () => {\n  return (\n    <div className='notFound'>\n      <div className='infoText'>\n        <h1>Not found! <span role='img' aria-label='Emoji'>🥺</span></h1>\n        <p>{'The resource you\\'re looking for doesn\\'t exist.'}</p>\n        <Link to='/'>Back to startpage</Link>\n      </div>\n    </div>\n  )\n}\n\n// Photo by Tim Trad on Unsplash\n\nexport default NotFoundPage\n","import axios from 'axios'\nconst baseUrl = '/api/user'\n\nconst createUser = async payload => {\n  const response = await axios.post(baseUrl, payload)\n  return response.data\n}\n\nexport default { createUser }\n","import React, { useState } from 'react'\nimport { Link } from 'react-router-dom'\nimport userService from '../api/userService'\nimport { Button } from 'semantic-ui-react'\nimport { Input } from 'semantic-ui-react'\nimport { Icon } from 'semantic-ui-react'\nimport './Register.scss'\n\nconst Register = props => {\n  const [userName, setuserName] = useState('')\n  const [name, setName] = useState('')\n  const [passWord, setpassWord] = useState('')\n\n  const loginHandler = async () => {\n    const payload = {\n      userName,\n      name,\n      passWord\n    }\n    const response = await userService.createUser(payload)\n    if (response && response.success) {\n      props.history.push('/login')\n    } else {\n      return null\n    }\n  }\n  const usernameHandler = event => {\n    setuserName(event.target.value)\n  }\n  const passwordHandler = event => {\n    setpassWord(event.target.value)\n  }\n  const nameHandler = event => {\n    setName(event.target.value)\n  }\n  const handleDeleteUserName = () => {\n    setuserName('')\n  }\n  const handleDeletename = () => {\n    setuserName('')\n  }\n  const handleDeletePassword = () => {\n    setpassWord('')\n  }\n\n  return (\n    <div className='loginContainer'>\n      <h1>Create an account</h1>\n      <form onSubmit={loginHandler} className='inputForm'>\n        <Input\n          className='inputField'\n          icon={<Icon name='delete' link onClick={handleDeleteUserName} />}\n          placeholder='Username...'\n          value={userName}\n          onChange={usernameHandler}\n        />\n        <Input\n          className='inputField'\n          icon={<Icon name='delete' link onClick={handleDeletename} />}\n          placeholder='Name...'\n          value={name}\n          onChange={nameHandler}\n        />\n        <Input\n          type='password'\n          className='inputField'\n          icon={<Icon name='delete' link onClick={handleDeletePassword} />}\n          placeholder='Password...'\n          value={passWord}\n          onChange={passwordHandler}\n        />\n        <Button\n          className='registerBtn'\n          content='Register'\n          type='submit'\n          basic\n          color='purple'\n        />\n      </form>\n      <Link to='/'>Or login here</Link>\n    </div>\n  )\n}\n\nexport default Register\n","import React from 'react'\nimport { Form, Radio } from 'semantic-ui-react'\nimport './quizForm.scss'\n\nconst Header = ({ quizType, handleRadioButnChange }) => {\n  return (\n    <div className='quizSelectionForm'>\n      <Form>\n        <Form.Field style={{ fontSize: 20, marginBottom: 35 }}>\n          Create your own quiz here, start by selecting quiz type:\n        </Form.Field>\n        <Form.Field>\n          <Radio\n            label='Multiple choice'\n            name='radioGroup'\n            value='multiple'\n            checked={quizType === 'Multiple choice'}\n            onChange={handleRadioButnChange}\n          />\n        </Form.Field>\n        <Form.Field>\n          <Radio\n            label='True / False'\n            name='radioGroup'\n            value='boolean'\n            checked={quizType === 'True / False'}\n            onChange={handleRadioButnChange}\n          />\n        </Form.Field>\n      </Form>\n    </div>\n  )\n}\n\nexport default Header\n","import React, { useState } from 'react'\nimport { Input } from 'semantic-ui-react'\nimport { Icon } from 'semantic-ui-react'\nimport './quizForm.scss'\n\nfunction AnswerField({ placeholder, newAnswerHandler, index, correct }) {\n  const [answerText, setAnswer] = useState('')\n  const handleresetAnswer = () => {\n    setAnswer('')\n  }\n\n  const handleAnswer = event => {\n    setAnswer(event.target.value)\n    newAnswerHandler({\n      index: index,\n      answer: event.target.value,\n      correct: correct\n    })\n  }\n\n  return (\n    <div>\n      <Input\n        className='inputField'\n        icon={<Icon name='delete' link onClick={() => handleresetAnswer()} />}\n        placeholder={placeholder}\n        value={answerText}\n        onChange={handleAnswer}\n      />\n    </div>\n  )\n}\n\nexport default AnswerField\n","import React, { useState } from 'react'\nimport { connect } from 'react-redux'\nimport CONSTANTS from '../../constants'\nimport { Button } from 'semantic-ui-react'\nimport { Input } from 'semantic-ui-react'\nimport { Icon } from 'semantic-ui-react'\nimport AnswerField from './AnswerField'\nimport './quizForm.scss'\n\nconst MultiQuizInput = ({\n  numberOfAnswers,\n  errorHandler,\n  saveQuizData,\n  questionIndex\n}) => {\n  const [question, setQuestion] = useState('')\n  const [correct_answer, setCorrectAnswer] = useState('')\n  const [incorrect_answers, setAnswers] = useState([])\n  const [questionSaved, setquestionSaved] = useState('')\n\n  const newTextHandler = event => {\n    setQuestion(event.target.value)\n  }\n\n  const handleresetText = () => {\n    setQuestion('')\n  }\n\n  const newAnswerHandler = answer => {\n    if (answer.index === 'correct') {\n      return setCorrectAnswer(answer.answer)\n    }\n    const res = incorrect_answers.findIndex(e => {\n      return e.index === answer.index\n    })\n    if (res === -1) {\n      return setAnswers([...incorrect_answers, answer])\n    }\n    incorrect_answers[res] = answer\n    setAnswers([...incorrect_answers])\n  }\n\n  const buttonHandler = () => {\n    if (question.length < 5) {\n      errorHandler('Question should be at least 5 characters')\n      return false\n    }\n    if (incorrect_answers.length < numberOfAnswers) {\n      errorHandler('You have not filled in all the asnwers')\n      return false\n    }\n    saveQuizData({\n      questionIndex: questionIndex,\n      question,\n      correct_answer,\n      incorrect_answers\n    })\n    setquestionSaved('Question saved!')\n  }\n  const renderAnswerInput = () => {\n    const rows = [\n      <AnswerField\n        key={'correctAnswer'}\n        index={'correct'}\n        newAnswerHandler={newAnswerHandler}\n        placeholder={'Correct answer'}\n        correct={true}\n      />\n    ]\n    for (let i = 0; i < numberOfAnswers; i++) {\n      rows.push(\n        <AnswerField\n          index={i}\n          newAnswerHandler={newAnswerHandler}\n          placeholder={'Incorrect answer'}\n          correct={false}\n        />\n      )\n    }\n    return (\n      <div className='answerRow'>\n        {rows.map((row, index) => (\n          <div key={index}>{row}</div>\n        ))}\n      </div>\n    )\n  }\n\n  return (\n    <div className='quizRow'>\n      <Input\n        className='inputField'\n        icon={<Icon name='delete' link onClick={() => handleresetText()} />}\n        placeholder='Question'\n        value={question}\n        onChange={newTextHandler}\n      />\n      {renderAnswerInput()}\n      <Button\n        className='saveBtn'\n        content='Save question'\n        type='submit'\n        basic\n        color='purple'\n        onClick={() => buttonHandler()}\n      />\n      <p>{questionSaved}</p>\n    </div>\n  )\n}\n\nconst mapStateToProps = state => ({\n  multiQuizData: state.appState.multiQuizData\n})\n\nconst mapDispatchToProps = dispatch => ({\n  saveQuizData: multiQuizData => {\n    dispatch({\n      type: CONSTANTS.MULTI_QUIZ_DATA,\n      payload: multiQuizData\n    })\n  }\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MultiQuizInput)\n","import React, { useState } from 'react'\nimport { connect } from 'react-redux'\nimport CONSTANTS from '../../constants'\nimport { Form, Radio } from 'semantic-ui-react'\nimport { Button } from 'semantic-ui-react'\nimport { Input } from 'semantic-ui-react'\nimport { Icon } from 'semantic-ui-react'\nimport './quizForm.scss'\n\nconst BooleanQuizInput = props => {\n  const [question, setQuestion] = useState('')\n  const [correctAnswer, setCorrectAnswer] = useState('')\n  const [questionSaved, setquestionSaved] = useState('')\n\n  const newTextHandler = event => {\n    setQuestion(event.target.value)\n  }\n\n  const handleresetText = () => {\n    setQuestion('')\n  }\n\n  const handleRadioButnChange = e => {\n    if (e.target.textContent === 'True') {\n      setCorrectAnswer('True')\n    }\n    if (e.target.textContent === 'False') {\n      setCorrectAnswer('False')\n    }\n  }\n\n  const buttonHandler = () => {\n    if (question.length < 5) {\n      props.errorHandler('Question should be at least 5 characters')\n      return false\n    }\n    if (!correctAnswer) {\n      props.errorHandler('Select the correct answer')\n      return false\n    }\n    props.saveQuizData({\n      questionIndex: props.questionIndex,\n      question,\n      correctAnswer\n    })\n    setquestionSaved('Question saved!')\n  }\n\n  return (\n    <div className='booleanWrapper'>\n      <Input\n        className='inputField'\n        icon={<Icon name='delete' link onClick={() => handleresetText()} />}\n        placeholder='Question'\n        value={question}\n        onChange={newTextHandler}\n      />\n      <div>\n        <Form className='answerForm'>\n          <Form.Field>\n            <Radio\n              label='False'\n              name='radioGroup'\n              value='False'\n              onChange={handleRadioButnChange}\n            />\n          </Form.Field>\n          <Form.Field>\n            <Radio\n              label='True'\n              name='radioGroup'\n              value='True'\n              onChange={handleRadioButnChange}\n            />\n          </Form.Field>\n        </Form>\n      </div>\n      <Button\n        className='saveBtn'\n        content='Save question'\n        type='submit'\n        basic\n        color='purple'\n        onClick={() => buttonHandler()}\n      />\n      <p>{questionSaved}</p>\n    </div>\n  )\n}\n\nconst mapStateToProps = state => ({\n  booleanQuizData: state.appState.booleanQuizData\n})\n\nconst mapDispatchToProps = dispatch => ({\n  saveQuizData: booleanQuizData => {\n    dispatch({\n      type: CONSTANTS.BOOLEAN_QUIZ_DATA,\n      payload: booleanQuizData\n    })\n  }\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(BooleanQuizInput)\n","import axios from 'axios'\nimport store from '../store'\n\nconst createBooleanQuiz = async payload => {\n  const baseUrl = '/api/booleanQuiz'\n  const state = store.getState()\n  const config = {\n    headers: { Authorization: `bearer ${state.appState.token}` }\n  }\n  try {\n    const response = await axios.post(baseUrl, payload, config)\n    return response.data\n  } catch (error) {\n    return error.response.data\n  }\n}\n\nconst createMultiChoiceQuiz = async payload => {\n  const baseUrl = '/api/multiQuiz'\n  const state = store.getState()\n  const config = {\n    headers: { Authorization: `bearer ${state.appState.token}` }\n  }\n  try {\n    const response = await axios.post(baseUrl, payload, config)\n    return response.data\n  } catch (error) {\n    return error.response.data\n  }\n}\n\nexport default { createBooleanQuiz, createMultiChoiceQuiz }\n","import React, { useState } from 'react'\nimport Header from './Header'\nimport { connect } from 'react-redux'\nimport { Input } from 'semantic-ui-react'\nimport { Icon } from 'semantic-ui-react'\nimport MultiQuizInput from './MultiQuizInput'\nimport BooleanQuizInput from './BooleanQuizInput'\nimport { Button } from 'semantic-ui-react'\nimport { Dropdown } from 'semantic-ui-react'\nimport quizService from '../../api/userQuizService'\nimport './quizForm.scss'\n\nconst QuizForm = props => {\n  const [numberOfQuestions, setNumberOfQuestions] = useState('')\n  const [numberOfAnswers, setNumberOfAnswers] = useState('')\n  const [quizType, setQuizType] = useState('')\n  const [error, setError] = useState('')\n  const [quizTitle, setQuizTitle] = useState('')\n  const [quizSaved, setquizSaved] = useState('')\n\n  const handleresetTitle = () => {\n    setQuizTitle('')\n  }\n\n  const titleHandler = event => {\n    setQuizTitle(event.target.value)\n  }\n\n  const errorHandler = errorMessage => {\n    setError(errorMessage)\n    setTimeout(() => {\n      setError('')\n    }, 3000)\n  }\n\n  const validateQuizInput = data => {\n    if (data.quizTitle.length < 5) {\n      errorHandler('Quiz title should be at least 5 characters')\n      return false\n    }\n    if (!data.questions.length) {\n      errorHandler('There are no saved questions')\n      return false\n    }\n    if (data.questions.length < numberOfQuestions - 1) {\n      errorHandler('You have not saved all the questions')\n      return false\n    }\n    return true\n  }\n\n  const saveQuizHandler = async () => {\n    const payload = { quizTitle: quizTitle, questions: null }\n    if (quizType === 'True / False') {\n      payload.questions = props.booleanQuizData\n    }\n    if (quizType === 'Multiple choice') {\n      payload.questions = props.multiQuizData\n    }\n    if (!validateQuizInput(payload)) {\n      return false\n    } else {\n      const response =\n        quizType === 'True / False'\n          ? await quizService.createBooleanQuiz(payload)\n          : await quizService.createMultiChoiceQuiz(payload)\n      if (response.error) {\n        errorHandler(response.error.message)\n      } else {\n        setquizSaved('Quiz saved!')\n      }\n    }\n    setQuizType('')\n    setQuizTitle('')\n    setNumberOfQuestions('')\n  }\n\n  const renderQuestionField = () => {\n    const rows = []\n    if (quizType && quizType === 'Multiple choice' && numberOfQuestions) {\n      for (let i = 0; i < numberOfQuestions; i++) {\n        rows.push(\n          <MultiQuizInput\n            numberOfAnswers={numberOfAnswers}\n            errorHandler={errorHandler}\n            questionIndex={i}\n          />\n        )\n      }\n    }\n    if (quizType && quizType === 'True / False' && numberOfQuestions) {\n      for (let i = 0; i < numberOfQuestions; i++) {\n        rows.push(\n          <BooleanQuizInput errorHandler={errorHandler} questionIndex={i} />\n        )\n      }\n    }\n    return (\n      <div>\n        {rows.map((row, index) => (\n          <div key={index}>{row}</div>\n        ))}\n      </div>\n    )\n  }\n\n  const handleQuestionDropDownChange = e => {\n    !quizType\n      ? errorHandler('Select a quiz type')\n      : setNumberOfQuestions(e.target.textContent)\n  }\n\n  const handleAnswerDropDownChange = e => {\n    quizType !== 'Multiple choice'\n      ? errorHandler('Select a quiz type')\n      : setNumberOfAnswers(e.target.textContent - 1)\n  }\n\n  const renderDropDown = () => {\n    const options = []\n    for (let i = 1; i <= 15; i++) {\n      options.push({ key: i, text: i, value: i })\n    }\n    return (\n      <div className='dropDown'>\n        <p style={{ color: 'red', fontSize: 16 }}>{error}</p>\n        <div className='dropDownWrapper'>\n          <p>Number of questions</p>\n          <Dropdown\n            placeholder='Select the number of questions'\n            fluid\n            selection\n            options={options}\n            onChange={handleQuestionDropDownChange}\n          />\n        </div>\n        {quizType === 'Multiple choice' ? (\n          <div className='dropDownWrapper'>\n            <p>Number of answer choices</p>\n            <Dropdown\n              placeholder='Select the number of answers'\n              fluid\n              selection\n              options={options}\n              onChange={handleAnswerDropDownChange}\n            />\n          </div>\n        ) : null}\n      </div>\n    )\n  }\n\n  const handleRadioButnChange = e => {\n    setQuizType(e.target.textContent)\n  }\n\n  return (\n    <div className='wrapper'>\n      <Header\n        quizType={quizType}\n        handleRadioButnChange={handleRadioButnChange}\n      />\n      <Input\n        className='inputField'\n        icon={<Icon name='delete' link onClick={() => handleresetTitle()} />}\n        placeholder='Quiz title'\n        value={quizTitle}\n        onChange={titleHandler}\n      />\n      {renderDropDown()}\n      {renderQuestionField()}\n      <Button\n        className='saveBtn'\n        content='Save quiz'\n        type='submit'\n        basic\n        color='purple'\n        onClick={() => saveQuizHandler()}\n      />\n      <h2 style={{ textAlign: 'initial' }}>{quizSaved}</h2>\n    </div>\n  )\n}\n\nconst mapStateToProps = state => ({\n  booleanQuizData: state.appState.booleanQuizData,\n  multiQuizData: state.appState.multiQuizData\n})\n\nexport default connect(mapStateToProps)(QuizForm)\n","import React from 'react'\nimport QuizForm from './QuizForm'\nimport './quizForm.scss'\n\nconst OwnQuiz = () => {\n  return (\n    <div className='quizFormContainer'>\n      <QuizForm />\n    </div>\n  )\n}\n\nexport default OwnQuiz\n","import React from 'react'\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom'\nimport Home from './components/Home'\nimport QuizContainer from './components/quizComponents/QuizContainer'\nimport Login from './components/Login'\nimport Header from './components/Header'\nimport Chat from './components/Chat'\nimport ProfilePage from './components/profileComponents/ProfilePage'\nimport QuizPage from './components/quizComponents/QuizPage'\nimport NotFoundPage from './components/NotFoundPage'\nimport Register from './components/Register'\nimport OwnQuiz from './components/onwQuiz'\n\nconst Routes = () => {\n  return (\n    <div>\n      <Router>\n        <Header />\n        <Switch>\n          <Route exact path='/' render={() => <Home />} />\n          <Route exact path='/chat' render={() => <Chat />} />\n          <Route exact path='/quiz' render={() => <QuizContainer />} />\n          <Route exact path='/login' render={() => <Login />} />\n          <Route exact path='/register' render={() => <Register />} />\n          <Route exact path='/profile' render={() => <ProfilePage />} />\n          <Route exact path='/ownQuizzes' render={() => <OwnQuiz />} />\n          <Route\n            exact\n            path={'/quiz/:selectedQuiz'}\n            render={() => <QuizPage />}\n          />\n          <Route\n            exact\n            path={'/quiz/multipleChoice/:selectedQuiz'}\n            render={() => <QuizPage />}\n          />\n          <Route\n            exact\n            path={'/quiz/boolean/:selectedQuiz'}\n            render={() => <QuizPage />}\n          />\n          <Route component={NotFoundPage} />\n        </Switch>\n      </Router>\n    </div>\n  )\n}\n\nexport default Routes\n","import React from 'react'\nimport { BrowserRouter as Router, Route } from 'react-router-dom'\nimport Login from './components/Login'\nimport Register from './components/Register'\n\nconst LoginRoutes = () => {\n  return (\n    <div>\n      <Router>\n        <Route exact path='/' render={() => <Login />} />\n        <Route exact path='/register' render={() => <Register />} />\n      </Router>\n    </div>\n  )\n}\n\nexport default LoginRoutes\n","import React, { useEffect } from 'react'\nimport { connect } from 'react-redux'\nimport Routes from './routes'\nimport LoginRoutes from './loginroutes'\nimport CONSTANTS from './constants'\nimport './App.scss'\n\nconst App = props => {\n  const { gotUser, gotToken } = props\n\n  useEffect(() => {\n    const loggedUserJSON = window.localStorage.getItem('loggedInUser')\n    if (loggedUserJSON) {\n      const user = JSON.parse(loggedUserJSON)\n      if (user && user.token) {\n        gotUser(user)\n        gotToken(user.token)\n      }\n    }\n  }, [gotUser, gotToken])\n\n  return <div className='App'>{!props.user ? <LoginRoutes /> : <Routes />}</div>\n}\n\nconst mapStateToProps = state => ({\n  user: state.appState.user\n})\n\nconst mapDispatchToProps = dispatch => ({\n  gotUser: user => {\n    dispatch({\n      type: CONSTANTS.GOT_USER,\n      payload: user\n    })\n  },\n  gotToken: token => {\n    dispatch({\n      type: CONSTANTS.GOT_TOKEN,\n      payload: token\n    })\n  }\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App)\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { Provider } from 'react-redux'\nimport store from './store'\nimport App from './App'\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}